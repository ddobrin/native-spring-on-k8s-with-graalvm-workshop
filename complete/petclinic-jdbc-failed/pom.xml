<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>org.springframework.samples</groupId>
	<artifactId>petclinic-jdbc-failed</artifactId>
	<version>0.0.1</version>

	<properties>
		<!-- Generic properties -->
		<java.version>11</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- Web dependencies -->
		<webjars-bootstrap.version>3.3.6</webjars-bootstrap.version>
		<webjars-jquery-ui.version>1.11.4</webjars-jquery-ui.version>
		<webjars-jquery.version>2.2.4</webjars-jquery.version>
		<wro4j.version>1.8.0</wro4j.version>

		<main.class>org.springframework.samples.petclinic.PetClinicApplication</main.class>

		<spring-native.version>0.10.1</spring-native.version>
		<spring-cloud.version>2020.0.3</spring-cloud.version>
		<spring-native.version>0.10.1</spring-native.version>
		<native-buildtools.version>0.9.1</native-buildtools.version>
		<repackage.classifier/>

		<jvm-image-type>jvm</jvm-image-type>
		<native-image-type>native</native-image-type>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.experimental</groupId>
			<artifactId>spring-native</artifactId>
			<version>${spring-native.version}</version>
		</dependency>

		<!-- Spring and Spring Boot dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.apache.tomcat.embed</groupId>
					<artifactId>tomcat-embed-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.tomcat.embed</groupId>
					<artifactId>tomcat-embed-websocket</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.experimental</groupId>
			<artifactId>tomcat-embed-programmatic</artifactId>
			<version>${tomcat.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Databases  -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- webjars -->
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>webjars-locator-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery</artifactId>
			<version>${webjars-jquery.version}</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery-ui</artifactId>
			<version>${webjars-jquery-ui.version}</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>${webjars-bootstrap.version}</version>
		</dependency>
		<!-- end of webjars -->

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webflux</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!-- used for default build using the Spring Boot Maven Plugin -->
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<layers>
						<enabled>true</enabled>
					</layers>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.experimental</groupId>
				<artifactId>spring-aot-maven-plugin</artifactId>
				<version>${spring-native.version}</version>
				<configuration>
					<removeYamlSupport>true</removeYamlSupport>
				</configuration>
				<executions>
					<execution>
						<id>test-generate</id>
						<goals>
							<goal>test-generate</goal>
						</goals>
					</execution>
					<execution>
						<id>generate</id>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>ro.isdc.wro4j</groupId>
				<artifactId>wro4j-maven-plugin</artifactId>
				<version>${wro4j.version}</version>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<wroManagerFactory>ro.isdc.wro.maven.plugin.manager.factory.ConfigurableWroManagerFactory</wroManagerFactory>
					<cssDestinationFolder>${project.build.directory}/classes/static/resources/css</cssDestinationFolder>
					<wroFile>${basedir}/src/main/wro/wro.xml</wroFile>
					<extraConfigFile>${basedir}/src/main/wro/wro.properties</extraConfigFile>
					<contextFolder>${basedir}/src/main/less</contextFolder>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.webjars</groupId>
						<artifactId>bootstrap</artifactId>
						<version>${webjars-bootstrap.version}</version>
					</dependency>
					<!-- For Java 11 compatibility -->
					<dependency>
						<groupId>org.mockito</groupId>
						<artifactId>mockito-core</artifactId>
						<version>${mockito.version}</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>


	<profiles>
		<!-- this is the snippet that will use the buildpacks to produce a container image of the JVM executable -->
		<profile>
			<id>jvm-image</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<classifier>${repackage.classifier}</classifier>
							<layers>
								<enabled>true</enabled>
							</layers>
							<image>
								<builder>paketobuildpacks/builder:base</builder>
								<name>${project.artifactId}-${jvm-image-type}:${project.version}</name>
							</image>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>build-image</goal>
								</goals>
								<phase>package</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.springframework.experimental</groupId>
						<artifactId>spring-aot-maven-plugin</artifactId>
						<version>${spring-native.version}</version>
						<executions>
							<execution>
								<id>test-generate</id>
								<goals>
									<goal>test-generate</goal>
								</goals>
							</execution>
							<execution>
								<id>generate</id>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>ro.isdc.wro4j</groupId>
						<artifactId>wro4j-maven-plugin</artifactId>
						<version>${wro4j.version}</version>
						<executions>
							<execution>
								<phase>generate-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<wroManagerFactory>ro.isdc.wro.maven.plugin.manager.factory.ConfigurableWroManagerFactory</wroManagerFactory>
							<cssDestinationFolder>${project.build.directory}/classes/static/resources/css</cssDestinationFolder>
							<wroFile>${basedir}/src/main/wro/wro.xml</wroFile>
							<extraConfigFile>${basedir}/src/main/wro/wro.properties</extraConfigFile>
							<contextFolder>${basedir}/src/main/less</contextFolder>
						</configuration>
						<dependencies>
							<dependency>
								<groupId>org.webjars</groupId>
								<artifactId>bootstrap</artifactId>
								<version>${webjars-bootstrap.version}</version>
							</dependency>
							<!-- For Java 11 compatibility -->
							<dependency>
								<groupId>org.mockito</groupId>
								<artifactId>mockito-core</artifactId>
								<version>${mockito.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- this is the snippet that will use the buildpacks to produce a container image of the Native executable -->
		<profile>
			<id>native-image</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<classifier>${repackage.classifier}</classifier>
							<image>
								<builder>paketobuildpacks/builder:tiny</builder>
								<name>${project.artifactId}-${native-image-type}:${project.version}</name>
								<env>
									<BP_BOOT_NATIVE_IMAGE>1</BP_BOOT_NATIVE_IMAGE>
									<BP_JVM_VERSION>11</BP_JVM_VERSION>
									<BP_BOOT_NATIVE_IMAGE_BUILD_ARGUMENTS>
										<removeSpelSupport>true</removeSpelSupport>
										<removeYamlSupport>true</removeYamlSupport>
									</BP_BOOT_NATIVE_IMAGE_BUILD_ARGUMENTS>
								</env>
							</image>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>build-image</goal>
								</goals>
								<phase>package</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.springframework.experimental</groupId>
						<artifactId>spring-aot-maven-plugin</artifactId>
						<version>${spring-native.version}</version>
						<executions>
							<execution>
								<id>test-generate</id>
								<goals>
									<goal>test-generate</goal>
								</goals>
							</execution>
							<execution>
								<id>generate</id>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- this is the snippet that will invoke native-image during a regular maven build -->
		<profile>
			<id>native</id>
			<properties>
				<repackage.classifier>exec</repackage.classifier>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.graalvm.buildtools</groupId>
					<artifactId>junit-platform-native</artifactId>
					<version>${native-buildtools.version}</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.graalvm.buildtools</groupId>
						<artifactId>native-maven-plugin</artifactId>
						<version>${native-buildtools.version}</version>
						<executions>
							<execution>
								<id>test-native</id>
								<phase>test</phase>
								<goals>
									<goal>test</goal>
								</goals>
							</execution>
							<execution>
								<id>build-native</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<pluginRepositories>
		<pluginRepository>
			<id>spring-release</id>
			<name>Spring release</name>
			<url>https://repo.spring.io/release</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestone</id>
			<name>Spring milestone</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-snapshot</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<releases>
				<enabled>false</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>
	<repositories>
		<repository>
			<id>spring-release</id>
			<name>Spring release</name>
			<url>https://repo.spring.io/release</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestone</id>
			<name>Spring milestone</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-snapshot</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
	</repositories>
</project>
